### YamlMime:ManagedReference
items:
- uid: TeaPie.Variables.TeaPieVariablesExtensions
  commentId: T:TeaPie.Variables.TeaPieVariablesExtensions
  id: TeaPieVariablesExtensions
  parent: TeaPie.Variables
  children:
  - TeaPie.Variables.TeaPieVariablesExtensions.ContainsVariable(TeaPie.TeaPie,System.String)
  - TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariable(TeaPie.TeaPie,System.String)
  - TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariablesWithTag(TeaPie.TeaPie,System.String)
  langs:
  - csharp
  - vb
  name: TeaPieVariablesExtensions
  nameWithType: TeaPieVariablesExtensions
  fullName: TeaPie.Variables.TeaPieVariablesExtensions
  type: Class
  source:
    remote:
      path: src/TeaPie/Variables/TeaPieVariablesExtensions.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: TeaPieVariablesExtensions
    path: ../src/TeaPie/Variables/TeaPieVariablesExtensions.cs
    startLine: 2
  assemblies:
  - TeaPie
  namespace: TeaPie.Variables
  syntax:
    content: public static class TeaPieVariablesExtensions
    content.vb: Public Module TeaPieVariablesExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TeaPie.Variables.TeaPieVariablesExtensions.ContainsVariable(TeaPie.TeaPie,System.String)
  commentId: M:TeaPie.Variables.TeaPieVariablesExtensions.ContainsVariable(TeaPie.TeaPie,System.String)
  id: ContainsVariable(TeaPie.TeaPie,System.String)
  isExtensionMethod: true
  parent: TeaPie.Variables.TeaPieVariablesExtensions
  langs:
  - csharp
  - vb
  name: ContainsVariable(TeaPie, string)
  nameWithType: TeaPieVariablesExtensions.ContainsVariable(TeaPie, string)
  fullName: TeaPie.Variables.TeaPieVariablesExtensions.ContainsVariable(TeaPie.TeaPie, string)
  type: Method
  source:
    remote:
      path: src/TeaPie/Variables/TeaPieVariablesExtensions.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: ContainsVariable
    path: ../src/TeaPie/Variables/TeaPieVariablesExtensions.cs
    startLine: 10
  assemblies:
  - TeaPie
  namespace: TeaPie.Variables
  summary: Determines whether a variable with the specified <code class="paramref">name</code> exists.
  example: []
  syntax:
    content: public static bool ContainsVariable(this TeaPie teaPie, string name)
    parameters:
    - id: teaPie
      type: TeaPie.TeaPie
      description: The current context instance.
    - id: name
      type: System.String
      description: The name of the variable to check for existence.
    return:
      type: System.Boolean
      description: <code>true</code> if a variable with the specified <code class="paramref">name</code> exists; otherwise, <code>false</code>.
    content.vb: Public Shared Function ContainsVariable(teaPie As TeaPie, name As String) As Boolean
  overload: TeaPie.Variables.TeaPieVariablesExtensions.ContainsVariable*
  nameWithType.vb: TeaPieVariablesExtensions.ContainsVariable(TeaPie, String)
  fullName.vb: TeaPie.Variables.TeaPieVariablesExtensions.ContainsVariable(TeaPie.TeaPie, String)
  name.vb: ContainsVariable(TeaPie, String)
- uid: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariable(TeaPie.TeaPie,System.String)
  commentId: M:TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariable(TeaPie.TeaPie,System.String)
  id: RemoveVariable(TeaPie.TeaPie,System.String)
  isExtensionMethod: true
  parent: TeaPie.Variables.TeaPieVariablesExtensions
  langs:
  - csharp
  - vb
  name: RemoveVariable(TeaPie, string)
  nameWithType: TeaPieVariablesExtensions.RemoveVariable(TeaPie, string)
  fullName: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariable(TeaPie.TeaPie, string)
  type: Method
  source:
    remote:
      path: src/TeaPie/Variables/TeaPieVariablesExtensions.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: RemoveVariable
    path: ../src/TeaPie/Variables/TeaPieVariablesExtensions.cs
    startLine: 20
  assemblies:
  - TeaPie
  namespace: TeaPie.Variables
  summary: >-
    Attempts to remove the variable(s) with the specified <code class="paramref">name</code> from all levels

    (<b><i>TestCaseVariables, CollectionVariables, EnvironmentVariables, GlobalVariables</i></b>).
  example: []
  syntax:
    content: public static bool RemoveVariable(this TeaPie teaPie, string name)
    parameters:
    - id: teaPie
      type: TeaPie.TeaPie
      description: The current context instance.
    - id: name
      type: System.String
      description: The name of the variable(s) to remove.
    return:
      type: System.Boolean
      description: <code>true</code> if the variable(s) were successfully removed from all levels; otherwise, <code>false</code>.
    content.vb: Public Shared Function RemoveVariable(teaPie As TeaPie, name As String) As Boolean
  overload: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariable*
  nameWithType.vb: TeaPieVariablesExtensions.RemoveVariable(TeaPie, String)
  fullName.vb: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariable(TeaPie.TeaPie, String)
  name.vb: RemoveVariable(TeaPie, String)
- uid: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariablesWithTag(TeaPie.TeaPie,System.String)
  commentId: M:TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariablesWithTag(TeaPie.TeaPie,System.String)
  id: RemoveVariablesWithTag(TeaPie.TeaPie,System.String)
  isExtensionMethod: true
  parent: TeaPie.Variables.TeaPieVariablesExtensions
  langs:
  - csharp
  - vb
  name: RemoveVariablesWithTag(TeaPie, string)
  nameWithType: TeaPieVariablesExtensions.RemoveVariablesWithTag(TeaPie, string)
  fullName: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariablesWithTag(TeaPie.TeaPie, string)
  type: Method
  source:
    remote:
      path: src/TeaPie/Variables/TeaPieVariablesExtensions.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: RemoveVariablesWithTag
    path: ../src/TeaPie/Variables/TeaPieVariablesExtensions.cs
    startLine: 31
  assemblies:
  - TeaPie
  namespace: TeaPie.Variables
  summary: >-
    Attempts to remove all variables tagged with the specified <code class="paramref">tag</code> from all levels

    (<b><i>TestCaseVariables, CollectionVariables, EnvironmentVariables, GlobalVariables</i></b>).
  example: []
  syntax:
    content: public static bool RemoveVariablesWithTag(this TeaPie teaPie, string tag)
    parameters:
    - id: teaPie
      type: TeaPie.TeaPie
      description: The current context instance.
    - id: tag
      type: System.String
      description: The tag used to identify variables for removal.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if all variables with the specified tag were successfully removed from all levels;
            otherwise, <code>false</code>.
    content.vb: Public Shared Function RemoveVariablesWithTag(teaPie As TeaPie, tag As String) As Boolean
  overload: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariablesWithTag*
  nameWithType.vb: TeaPieVariablesExtensions.RemoveVariablesWithTag(TeaPie, String)
  fullName.vb: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariablesWithTag(TeaPie.TeaPie, String)
  name.vb: RemoveVariablesWithTag(TeaPie, String)
references:
- uid: TeaPie.Variables
  commentId: N:TeaPie.Variables
  href: TeaPie.html
  name: TeaPie.Variables
  nameWithType: TeaPie.Variables
  fullName: TeaPie.Variables
  spec.csharp:
  - uid: TeaPie
    name: TeaPie
    href: TeaPie.html
  - name: .
  - uid: TeaPie.Variables
    name: Variables
    href: TeaPie.Variables.html
  spec.vb:
  - uid: TeaPie
    name: TeaPie
    href: TeaPie.html
  - name: .
  - uid: TeaPie.Variables
    name: Variables
    href: TeaPie.Variables.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TeaPie.Variables.TeaPieVariablesExtensions.ContainsVariable*
  commentId: Overload:TeaPie.Variables.TeaPieVariablesExtensions.ContainsVariable
  href: TeaPie.Variables.TeaPieVariablesExtensions.html#TeaPie_Variables_TeaPieVariablesExtensions_ContainsVariable_TeaPie_TeaPie_System_String_
  name: ContainsVariable
  nameWithType: TeaPieVariablesExtensions.ContainsVariable
  fullName: TeaPie.Variables.TeaPieVariablesExtensions.ContainsVariable
- uid: TeaPie.TeaPie
  commentId: T:TeaPie.TeaPie
  parent: TeaPie
  href: TeaPie.TeaPie.html
  name: TeaPie
  nameWithType: TeaPie
  fullName: TeaPie.TeaPie
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TeaPie
  commentId: N:TeaPie
  href: TeaPie.html
  name: TeaPie
  nameWithType: TeaPie
  fullName: TeaPie
- uid: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariable*
  commentId: Overload:TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariable
  href: TeaPie.Variables.TeaPieVariablesExtensions.html#TeaPie_Variables_TeaPieVariablesExtensions_RemoveVariable_TeaPie_TeaPie_System_String_
  name: RemoveVariable
  nameWithType: TeaPieVariablesExtensions.RemoveVariable
  fullName: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariable
- uid: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariablesWithTag*
  commentId: Overload:TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariablesWithTag
  href: TeaPie.Variables.TeaPieVariablesExtensions.html#TeaPie_Variables_TeaPieVariablesExtensions_RemoveVariablesWithTag_TeaPie_TeaPie_System_String_
  name: RemoveVariablesWithTag
  nameWithType: TeaPieVariablesExtensions.RemoveVariablesWithTag
  fullName: TeaPie.Variables.TeaPieVariablesExtensions.RemoveVariablesWithTag
