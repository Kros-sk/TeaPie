### YamlMime:ManagedReference
items:
- uid: TeaPie.Testing.TestDirectivePatternBuilder
  commentId: T:TeaPie.Testing.TestDirectivePatternBuilder
  id: TestDirectivePatternBuilder
  parent: TeaPie.Testing
  children:
  - TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanArrayParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddDateTimeParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddHeaderNameParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddNumberArrayParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddNumberParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddParameter(System.String,System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddStatusCodesParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddStringArrayParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddStringParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.AddTimeOnlyParameter(System.String)
  - TeaPie.Testing.TestDirectivePatternBuilder.Build
  - TeaPie.Testing.TestDirectivePatternBuilder.Create(System.String)
  langs:
  - csharp
  - vb
  name: TestDirectivePatternBuilder
  nameWithType: TestDirectivePatternBuilder
  fullName: TeaPie.Testing.TestDirectivePatternBuilder
  type: Class
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: TestDirectivePatternBuilder
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 7
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: A builder for constructing regular expression patterns for test directives used in '.http' files.
  example: []
  syntax:
    content: public sealed class TestDirectivePatternBuilder
    content.vb: Public NotInheritable Class TestDirectivePatternBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.TeaPie.Json.JsonExtensions.ToJsonString
- uid: TeaPie.Testing.TestDirectivePatternBuilder.Create(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.Create(System.String)
  id: Create(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: Create(string)
  nameWithType: TestDirectivePatternBuilder.Create(string)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.Create(string)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: Create
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 22
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Creates a new instance of <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static TestDirectivePatternBuilder Create(string directiveName)
    parameters:
    - id: directiveName
      type: System.String
      description: The name of the directive.
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: A new <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Function Create(directiveName As String) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.Create*
  nameWithType.vb: TestDirectivePatternBuilder.Create(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.Create(String)
  name.vb: Create(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.Build
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.Build
  id: Build
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: TestDirectivePatternBuilder.Build()
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.Build()
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: Build
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 28
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Builds the final directive pattern as a <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string Build()
    return:
      type: System.String
      description: The constructed directive pattern.
    content.vb: Public Function Build() As String
  overload: TeaPie.Testing.TestDirectivePatternBuilder.Build*
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddParameter(System.String,System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddParameter(System.String,System.String)
  id: AddParameter(System.String,System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddParameter(string, string?)
  nameWithType: TestDirectivePatternBuilder.AddParameter(string, string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddParameter(string, string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 37
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a custom parameter with a specified pattern.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddParameter(string pattern, string? parameterName = null)
    parameters:
    - id: pattern
      type: System.String
      description: The regex pattern for the parameter.
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddParameter(pattern As String, parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddParameter(String, String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddParameter(String, String)
  name.vb: AddParameter(String, String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddStringParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddStringParameter(System.String)
  id: AddStringParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddStringParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddStringParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddStringParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddStringParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 47
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a <xref href="System.String" data-throw-if-not-resolved="false"></xref> parameter.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddStringParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddStringParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddStringParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddStringParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddStringParameter(String)
  name.vb: AddStringParameter(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanParameter(System.String)
  id: AddBooleanParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddBooleanParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddBooleanParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddBooleanParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 57
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> parameter.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddBooleanParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddBooleanParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddBooleanParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanParameter(String)
  name.vb: AddBooleanParameter(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddNumberParameter(System.String)
  id: AddNumberParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddNumberParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddNumberParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddNumberParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 67
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a numeric parameter.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddNumberParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddNumberParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddNumberParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberParameter(String)
  name.vb: AddNumberParameter(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddStatusCodesParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddStatusCodesParameter(System.String)
  id: AddStatusCodesParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddStatusCodesParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddStatusCodesParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddStatusCodesParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddStatusCodesParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 77
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a parameter for HTTP status codes.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddStatusCodesParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddStatusCodesParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddStatusCodesParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddStatusCodesParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddStatusCodesParameter(String)
  name.vb: AddStatusCodesParameter(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddHeaderNameParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddHeaderNameParameter(System.String)
  id: AddHeaderNameParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddHeaderNameParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddHeaderNameParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddHeaderNameParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddHeaderNameParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 87
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a parameter for HTTP header names.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddHeaderNameParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddHeaderNameParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddHeaderNameParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddHeaderNameParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddHeaderNameParameter(String)
  name.vb: AddHeaderNameParameter(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddDateTimeParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddDateTimeParameter(System.String)
  id: AddDateTimeParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddDateTimeParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddDateTimeParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddDateTimeParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddDateTimeParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 97
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> parameter.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddDateTimeParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddDateTimeParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddDateTimeParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddDateTimeParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddDateTimeParameter(String)
  name.vb: AddDateTimeParameter(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddTimeOnlyParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddTimeOnlyParameter(System.String)
  id: AddTimeOnlyParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddTimeOnlyParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddTimeOnlyParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddTimeOnlyParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddTimeOnlyParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 107
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a <xref href="System.TimeOnly" data-throw-if-not-resolved="false"></xref> parameter.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddTimeOnlyParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddTimeOnlyParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddTimeOnlyParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddTimeOnlyParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddTimeOnlyParameter(String)
  name.vb: AddTimeOnlyParameter(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddStringArrayParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddStringArrayParameter(System.String)
  id: AddStringArrayParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddStringArrayParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddStringArrayParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddStringArrayParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddStringArrayParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 117
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a parameter that accepts an array of <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddStringArrayParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddStringArrayParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddStringArrayParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddStringArrayParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddStringArrayParameter(String)
  name.vb: AddStringArrayParameter(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanArrayParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanArrayParameter(System.String)
  id: AddBooleanArrayParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddBooleanArrayParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddBooleanArrayParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanArrayParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddBooleanArrayParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 127
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a parameter that accepts an array of <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddBooleanArrayParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddBooleanArrayParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanArrayParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddBooleanArrayParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanArrayParameter(String)
  name.vb: AddBooleanArrayParameter(String)
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberArrayParameter(System.String)
  commentId: M:TeaPie.Testing.TestDirectivePatternBuilder.AddNumberArrayParameter(System.String)
  id: AddNumberArrayParameter(System.String)
  parent: TeaPie.Testing.TestDirectivePatternBuilder
  langs:
  - csharp
  - vb
  name: AddNumberArrayParameter(string?)
  nameWithType: TestDirectivePatternBuilder.AddNumberArrayParameter(string?)
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberArrayParameter(string?)
  type: Method
  source:
    remote:
      path: src/TeaPie/Testing/TestDirectivePatternBuilder.cs
      branch: testCaseRun
      repo: https://github.com/Kros-sk/TeaPie.git
    id: AddNumberArrayParameter
    path: ../src/TeaPie/Testing/TestDirectivePatternBuilder.cs
    startLine: 137
  assemblies:
  - TeaPie
  namespace: TeaPie.Testing
  summary: Adds a parameter that accepts an array of numbers.
  example: []
  syntax:
    content: public TestDirectivePatternBuilder AddNumberArrayParameter(string? parameterName = null)
    parameters:
    - id: parameterName
      type: System.String
      description: >-
        The optional name of the parameter. If not provided,
            a default name ("Parameter" + index, starting from 1) is assigned (e.g., "Parameter3").
    return:
      type: TeaPie.Testing.TestDirectivePatternBuilder
      description: The updated <xref href="TeaPie.Testing.TestDirectivePatternBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function AddNumberArrayParameter(parameterName As String = Nothing) As TestDirectivePatternBuilder
  overload: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberArrayParameter*
  nameWithType.vb: TestDirectivePatternBuilder.AddNumberArrayParameter(String)
  fullName.vb: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberArrayParameter(String)
  name.vb: AddNumberArrayParameter(String)
references:
- uid: TeaPie.Testing
  commentId: N:TeaPie.Testing
  href: TeaPie.html
  name: TeaPie.Testing
  nameWithType: TeaPie.Testing
  fullName: TeaPie.Testing
  spec.csharp:
  - uid: TeaPie
    name: TeaPie
    href: TeaPie.html
  - name: .
  - uid: TeaPie.Testing
    name: Testing
    href: TeaPie.Testing.html
  spec.vb:
  - uid: TeaPie
    name: TeaPie
    href: TeaPie.html
  - name: .
  - uid: TeaPie.Testing
    name: Testing
    href: TeaPie.Testing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.TeaPie.Json.JsonExtensions.ToJsonString
  commentId: M:TeaPie.Json.JsonExtensions.ToJsonString(System.Object)
  parent: TeaPie.Json.JsonExtensions
  definition: TeaPie.Json.JsonExtensions.ToJsonString(System.Object)
  href: TeaPie.Json.JsonExtensions.html#TeaPie_Json_JsonExtensions_ToJsonString_System_Object_
  name: ToJsonString(object)
  nameWithType: JsonExtensions.ToJsonString(object)
  fullName: TeaPie.Json.JsonExtensions.ToJsonString(object)
  nameWithType.vb: JsonExtensions.ToJsonString(Object)
  fullName.vb: TeaPie.Json.JsonExtensions.ToJsonString(Object)
  name.vb: ToJsonString(Object)
  spec.csharp:
  - uid: TeaPie.Json.JsonExtensions.ToJsonString(System.Object)
    name: ToJsonString
    href: TeaPie.Json.JsonExtensions.html#TeaPie_Json_JsonExtensions_ToJsonString_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: TeaPie.Json.JsonExtensions.ToJsonString(System.Object)
    name: ToJsonString
    href: TeaPie.Json.JsonExtensions.html#TeaPie_Json_JsonExtensions_ToJsonString_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TeaPie.Json.JsonExtensions.ToJsonString(System.Object)
  commentId: M:TeaPie.Json.JsonExtensions.ToJsonString(System.Object)
  isExternal: true
  href: TeaPie.Json.JsonExtensions.html#TeaPie_Json_JsonExtensions_ToJsonString_System_Object_
  name: ToJsonString(object)
  nameWithType: JsonExtensions.ToJsonString(object)
  fullName: TeaPie.Json.JsonExtensions.ToJsonString(object)
  nameWithType.vb: JsonExtensions.ToJsonString(Object)
  fullName.vb: TeaPie.Json.JsonExtensions.ToJsonString(Object)
  name.vb: ToJsonString(Object)
  spec.csharp:
  - uid: TeaPie.Json.JsonExtensions.ToJsonString(System.Object)
    name: ToJsonString
    href: TeaPie.Json.JsonExtensions.html#TeaPie_Json_JsonExtensions_ToJsonString_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: TeaPie.Json.JsonExtensions.ToJsonString(System.Object)
    name: ToJsonString
    href: TeaPie.Json.JsonExtensions.html#TeaPie_Json_JsonExtensions_ToJsonString_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TeaPie.Json.JsonExtensions
  commentId: T:TeaPie.Json.JsonExtensions
  parent: TeaPie.Json
  href: TeaPie.Json.JsonExtensions.html
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: TeaPie.Json.JsonExtensions
- uid: TeaPie.Json
  commentId: N:TeaPie.Json
  href: TeaPie.html
  name: TeaPie.Json
  nameWithType: TeaPie.Json
  fullName: TeaPie.Json
  spec.csharp:
  - uid: TeaPie
    name: TeaPie
    href: TeaPie.html
  - name: .
  - uid: TeaPie.Json
    name: Json
    href: TeaPie.Json.html
  spec.vb:
  - uid: TeaPie
    name: TeaPie
    href: TeaPie.html
  - name: .
  - uid: TeaPie.Json
    name: Json
    href: TeaPie.Json.html
- uid: TeaPie.Testing.TestDirectivePatternBuilder
  commentId: T:TeaPie.Testing.TestDirectivePatternBuilder
  parent: TeaPie.Testing
  href: TeaPie.Testing.TestDirectivePatternBuilder.html
  name: TestDirectivePatternBuilder
  nameWithType: TestDirectivePatternBuilder
  fullName: TeaPie.Testing.TestDirectivePatternBuilder
- uid: TeaPie.Testing.TestDirectivePatternBuilder.Create*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.Create
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_Create_System_String_
  name: Create
  nameWithType: TestDirectivePatternBuilder.Create
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TeaPie.Testing.TestDirectivePatternBuilder.Build*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.Build
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_Build
  name: Build
  nameWithType: TestDirectivePatternBuilder.Build
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.Build
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddParameter_System_String_System_String_
  name: AddParameter
  nameWithType: TestDirectivePatternBuilder.AddParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddParameter
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddStringParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddStringParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddStringParameter_System_String_
  name: AddStringParameter
  nameWithType: TestDirectivePatternBuilder.AddStringParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddStringParameter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddBooleanParameter_System_String_
  name: AddBooleanParameter
  nameWithType: TestDirectivePatternBuilder.AddBooleanParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanParameter
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddNumberParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddNumberParameter_System_String_
  name: AddNumberParameter
  nameWithType: TestDirectivePatternBuilder.AddNumberParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberParameter
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddStatusCodesParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddStatusCodesParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddStatusCodesParameter_System_String_
  name: AddStatusCodesParameter
  nameWithType: TestDirectivePatternBuilder.AddStatusCodesParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddStatusCodesParameter
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddHeaderNameParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddHeaderNameParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddHeaderNameParameter_System_String_
  name: AddHeaderNameParameter
  nameWithType: TestDirectivePatternBuilder.AddHeaderNameParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddHeaderNameParameter
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddDateTimeParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddDateTimeParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddDateTimeParameter_System_String_
  name: AddDateTimeParameter
  nameWithType: TestDirectivePatternBuilder.AddDateTimeParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddDateTimeParameter
- uid: System.TimeOnly
  commentId: T:System.TimeOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timeonly
  name: TimeOnly
  nameWithType: TimeOnly
  fullName: System.TimeOnly
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddTimeOnlyParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddTimeOnlyParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddTimeOnlyParameter_System_String_
  name: AddTimeOnlyParameter
  nameWithType: TestDirectivePatternBuilder.AddTimeOnlyParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddTimeOnlyParameter
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddStringArrayParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddStringArrayParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddStringArrayParameter_System_String_
  name: AddStringArrayParameter
  nameWithType: TestDirectivePatternBuilder.AddStringArrayParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddStringArrayParameter
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanArrayParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanArrayParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddBooleanArrayParameter_System_String_
  name: AddBooleanArrayParameter
  nameWithType: TestDirectivePatternBuilder.AddBooleanArrayParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddBooleanArrayParameter
- uid: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberArrayParameter*
  commentId: Overload:TeaPie.Testing.TestDirectivePatternBuilder.AddNumberArrayParameter
  href: TeaPie.Testing.TestDirectivePatternBuilder.html#TeaPie_Testing_TestDirectivePatternBuilder_AddNumberArrayParameter_System_String_
  name: AddNumberArrayParameter
  nameWithType: TestDirectivePatternBuilder.AddNumberArrayParameter
  fullName: TeaPie.Testing.TestDirectivePatternBuilder.AddNumberArrayParameter
